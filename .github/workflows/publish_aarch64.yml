# This is a basic workflow to help you get started with Actions

name: Publish Rocketman Frontend and Backend for aarch64

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: ['master']

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build_backend:
    name: Build backend
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: rocketman-backend-aarch64
    defaults:
      run:
        working-directory: ./prototypes/mqtt-backend
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
      - name: Package
        run: mvn package -DskipTests
      - name: Login to GitHub Packages
        uses: docker/login-action@v1
        with:
          arch: aarch64
          distro: ubuntu_latest
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          run: |
            echo "Building Image"
            docker build . -f src/main/docker/Dockerfile.fast-jar --tag $IMAGE_NAME
            echo "Publishing Image"
            IMAGE_ID=ghcr.io/${{ github.repository_owner }}/$IMAGE_NAME
            IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
            VERSION=latest
            echo IMAGE_ID=$IMAGE_ID
            echo VERSION=$VERSION
            docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
            docker push $IMAGE_ID:$VERSION

  build_frontend:
    name: Build frontend
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: rocketman-frontend
    defaults:
      run:
        working-directory: ./prototypes/frontend-angular/rocketman
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
      - name: Login to GitHub Packages
        uses: docker/login-action@v1
        with:
          arch: aarch64
          distro: ubuntu_latest
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          run: |
            echo "Building Image"
            docker build . --tag $IMAGE_NAME
            echo "Publishing Image"
            IMAGE_ID=ghcr.io/${{ github.repository_owner }}/$IMAGE_NAME
            IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
            VERSION=latest
            echo IMAGE_ID=$IMAGE_ID
            echo VERSION=$VERSION
            docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
            docker push $IMAGE_ID:$VERSION
